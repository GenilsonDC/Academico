[{"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/index.js":"1","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/routes/index.js":"2","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Task/index.js":"3","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Home/index.js":"4","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/QrCode/index.js":"5","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Home/styles.js":"6","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Task/styles.js":"7","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/QrCode/styles.js":"8","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/utils/isConnected.js":"9","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/services/api.js":"10","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/utils/typeIcons.js":"11","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/TaskCard/index.js":"12","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Footer/index.js":"13","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Header/index.js":"14","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/FilterCard/index.js":"15","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/TaskCard/styles.js":"16","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Footer/styles.js":"17","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Header/styles.js":"18","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/FilterCard/styles.js":"19"},{"size":207,"mtime":1586098310000,"results":"20","hashOfConfig":"21"},{"size":534,"mtime":1586174873000,"results":"22","hashOfConfig":"21"},{"size":4957,"mtime":1691806444942,"results":"23","hashOfConfig":"21"},{"size":2424,"mtime":1691806396444,"results":"24","hashOfConfig":"21"},{"size":1305,"mtime":1586196265000,"results":"25","hashOfConfig":"21"},{"size":747,"mtime":1691805306616,"results":"26","hashOfConfig":"21"},{"size":1963,"mtime":1691805479127,"results":"27","hashOfConfig":"21"},{"size":949,"mtime":1586173357000,"results":"28","hashOfConfig":"21"},{"size":90,"mtime":1586175149000,"results":"29","hashOfConfig":"21"},{"size":114,"mtime":1586001982000,"results":"30","hashOfConfig":"21"},{"size":610,"mtime":1586003398000,"results":"31","hashOfConfig":"21"},{"size":651,"mtime":1586101676000,"results":"32","hashOfConfig":"21"},{"size":203,"mtime":1585917767000,"results":"33","hashOfConfig":"21"},{"size":1506,"mtime":1586196376000,"results":"34","hashOfConfig":"21"},{"size":314,"mtime":1585920512000,"results":"35","hashOfConfig":"21"},{"size":755,"mtime":1586101735000,"results":"36","hashOfConfig":"21"},{"size":298,"mtime":1585917887000,"results":"37","hashOfConfig":"21"},{"size":1138,"mtime":1586175747000,"results":"38","hashOfConfig":"21"},{"size":502,"mtime":1585920516000,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"16m6x8p",{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/index.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/routes/index.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Task/index.js",["99","100","101"],[],"import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport * as S from \"./styles\";\nimport { format } from \"date-fns\";\n\nimport api from \"../../services/api\";\nimport isConnected from \"../../utils/isConnected\";\n\n//NOSSOS COMPONENTES\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport TypeIcons from \"../../utils/typeIcons\";\n\nimport iconCalendar from \"../../assets/calendar.png\";\nimport iconClock from \"../../assets/clock.png\";\n\nfunction Task({ match }) {\n  const [redirect, setRedirect] = useState(false);\n  const [type, setType] = useState();\n  const [id, setId] = useState();\n  const [done, setDone] = useState(false);\n  const [title, setTitle] = useState();\n  const [description, setDescription] = useState();\n  const [date, setDate] = useState();\n  const [hour, setHour] = useState();\n\n  async function LoadTaskDetails() {\n    await api.get(`/task/${match.params.id}`).then((response) => {\n      setType(response.data.type);\n      setDone(response.data.done);\n      setTitle(response.data.title);\n      setDescription(response.data.description);\n      setDate(format(new Date(response.data.when), \"yyyy-MM-dd\"));\n      setHour(format(new Date(response.data.when), \"HH:mm\"));\n    });\n  }\n\n  async function Save() {\n    //Validação dos dados\n    if (!title) return alert(\"Você precisa informar o título da terefa\");\n    else if (!description)\n      return alert(\"Você precisa informar a descrição da terefa\");\n    else if (!type) return alert(\"Você precisa selecionar o tipo da terefa\");\n    else if (!date) return alert(\"Você precisa definir a data da terefa\");\n    else if (!hour) return alert(\"Você precisa definir a hora da terefa\");\n\n    if (match.params.id) {\n      await api\n        .put(`/task/${match.params.id}`, {\n          macaddress: isConnected,\n          done,\n          type,\n          title,\n          description,\n          when: `${date}T${hour}:00.000`,\n        })\n        .then(() => setRedirect(true));\n    } else {\n      await api\n        .post(\"/task\", {\n          macaddress: isConnected,\n          type,\n          title,\n          description,\n          when: `${date}T${hour}:00.000`,\n        })\n        .then(() => setRedirect(true))\n        .catch((response) => {\n          alert(response.data.error);\n        });\n    }\n  }\n\n  async function Remove() {\n    const res = window.confirm(\"Deseja realmente remover a tarefa?\");\n    if (res === true) {\n      await api\n        .delete(`/task/${match.params.id}`)\n        .then(() => setRedirect(true));\n    }\n  }\n\n  useEffect(() => {\n    if (!isConnected) setRedirect(true);\n\n    LoadTaskDetails();\n  }, [LoadTaskDetails]);\n\n  return (\n    <S.Container>\n      {redirect && <Redirect to=\"/\" />}\n      <Header />\n\n      <S.Form>\n        <S.TypeIcons>\n          {TypeIcons.map(\n            (icon, index) =>\n              index > 0 && (\n                <button type=\"button\" onClick={() => setType(index)}>\n                  <img\n                    src={icon}\n                    alt=\"Tipo da Tarefa\"\n                    className={type && type !== index && \"inative\"}\n                  />\n                </button>\n              )\n          )}\n        </S.TypeIcons>\n\n        <S.Input>\n          <span>Título</span>\n          <input\n            type=\"text\"\n            placeholder=\"Título da terefa...\"\n            onChange={(e) => setTitle(e.target.value)}\n            value={title}\n          />\n        </S.Input>\n\n        <S.TextArea>\n          <span>Descrição</span>\n          <textarea\n            rows={5}\n            placeholder=\"Detalhes da tarefa...\"\n            onChange={(e) => setDescription(e.target.value)}\n            value={description}\n          />\n        </S.TextArea>\n\n        <S.Input>\n          <span>Data</span>\n          <input\n            type=\"date\"\n            placeholder=\"Título da terefa...\"\n            onChange={(e) => setDate(e.target.value)}\n            value={date}\n          />\n          <img src={iconCalendar} alt=\"Calendário\" />\n        </S.Input>\n\n        <S.Input>\n          <span>Hora</span>\n          <input\n            type=\"time\"\n            placeholder=\"Título da terefa...\"\n            onChange={(e) => setHour(e.target.value)}\n            value={hour}\n          />\n          <img src={iconClock} alt=\"Relógio\" />\n        </S.Input>\n\n        <S.Options>\n          <div>\n            <input\n              type=\"checkbox\"\n              checked={done}\n              onChange={() => setDone(!done)}\n            />\n            <span>CONCLUÍDO</span>\n          </div>\n          {match.params.id && (\n            <button type=\"button\" onClick={Remove}>\n              EXCLUIR\n            </button>\n          )}\n        </S.Options>\n\n        <S.Save>\n          <button type=\"button\" onClick={Save}>\n            SALVAR\n          </button>\n        </S.Save>\n      </S.Form>\n\n      <Footer />\n    </S.Container>\n  );\n}\n\nexport default Task;\n","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Home/index.js",["102","103"],[],"import React, { useState, useEffect } from \"react\";\nimport { Link, Redirect } from \"react-router-dom\";\nimport * as S from \"./styles\";\n\nimport api from \"../../services/api\";\nimport isConnected from \"../../utils/isConnected\";\n\n//NOSSOS COMPONENTES\nimport Header from \"../../components/Header\";\nimport Footer from \"../../components/Footer\";\nimport FilterCard from \"../../components/FilterCard\";\nimport TaskCard from \"../../components/TaskCard\";\n\nfunction Home() {\n  const [filterActived, setFilterActived] = useState(\"all\");\n  const [tasks, setTasks] = useState([]);\n  const [redirect, setRedirect] = useState(false);\n\n  async function loadTasks() {\n    await api\n      .get(`/task/filter/${filterActived}/${isConnected}`)\n      .then((response) => {\n        setTasks(response.data);\n      });\n  }\n\n  function Notification() {\n    setFilterActived(\"late\");\n  }\n\n  useEffect(() => {\n    loadTasks();\n\n    if (!isConnected) setRedirect(true);\n  }, [filterActived, loadTasks]);\n\n  return (\n    <S.Container>\n      {redirect && <Redirect to=\"/qrcode\" />}\n      <Header clickNotification={Notification} />\n\n      <S.FilterArea>\n        <button type=\"button\" onClick={() => setFilterActived(\"all\")}>\n          <FilterCard title=\"Todos\" actived={filterActived === \"all\"} />\n        </button>\n        <button type=\"button\" onClick={() => setFilterActived(\"today\")}>\n          <FilterCard title=\"Hoje\" actived={filterActived === \"today\"} />\n        </button>\n        <button type=\"button\" onClick={() => setFilterActived(\"week\")}>\n          <FilterCard title=\"Semana\" actived={filterActived === \"week\"} />\n        </button>\n        <button type=\"button\" onClick={() => setFilterActived(\"month\")}>\n          <FilterCard title=\"Mês\" actived={filterActived === \"month\"} />\n        </button>\n        <button type=\"button\" onClick={() => setFilterActived(\"year\")}>\n          <FilterCard title=\"Ano\" actived={filterActived === \"year\"} />\n        </button>\n      </S.FilterArea>\n\n      <S.Title>\n        <h3>{filterActived == \"late\" ? \"TAREFAS ATRASADAS\" : \"TAREFAS\"}</h3>\n      </S.Title>\n\n      <S.Content>\n        {tasks.map((t) => (\n          <Link to={`/task/${t._id}`}>\n            <TaskCard\n              type={t.type}\n              title={t.title}\n              when={t.when}\n              done={t.done}\n            />\n          </Link>\n        ))}\n      </S.Content>\n\n      <Footer />\n    </S.Container>\n  );\n}\n\nexport default Home;\n","/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/QrCode/index.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Home/styles.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/Task/styles.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/views/QrCode/styles.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/utils/isConnected.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/services/api.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/utils/typeIcons.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/TaskCard/index.js",["104","105"],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Footer/index.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Header/index.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/FilterCard/index.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/TaskCard/styles.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Footer/styles.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/Header/styles.js",[],[],"/Users/genilsondocarmosilva/Git/Academico/Udemy/ReactMongo/web/src/components/FilterCard/styles.js",[],[],{"ruleId":"106","severity":1,"message":"107","line":20,"column":10,"nodeType":"108","messageId":"109","endLine":20,"endColumn":12},{"ruleId":"106","severity":1,"message":"110","line":20,"column":14,"nodeType":"108","messageId":"109","endLine":20,"endColumn":19},{"ruleId":"111","severity":1,"message":"112","line":27,"column":3,"nodeType":"113","endLine":36,"endColumn":4},{"ruleId":"111","severity":1,"message":"114","line":19,"column":3,"nodeType":"113","endLine":25,"endColumn":4},{"ruleId":"115","severity":1,"message":"116","line":61,"column":28,"nodeType":"117","messageId":"118","endLine":61,"endColumn":30},{"ruleId":"111","severity":1,"message":"119","line":8,"column":16,"nodeType":"108","endLine":8,"endColumn":23},{"ruleId":"111","severity":1,"message":"119","line":9,"column":16,"nodeType":"108","endLine":9,"endColumn":23},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","'setId' is assigned a value but never used.","react-hooks/exhaustive-deps","The 'LoadTaskDetails' function makes the dependencies of useEffect Hook (at line 87) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'LoadTaskDetails' in its own useCallback() Hook.","FunctionDeclaration","The 'loadTasks' function makes the dependencies of useEffect Hook (at line 35) change on every render. Move it inside the useEffect callback. Alternatively, wrap the definition of 'loadTasks' in its own useCallback() Hook.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useMemo does nothing when called with only one argument. Did you forget to pass an array of dependencies?"]