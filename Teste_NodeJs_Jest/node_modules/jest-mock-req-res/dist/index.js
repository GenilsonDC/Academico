function e(){return(e=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var s=arguments[t];for(var n in s)Object.prototype.hasOwnProperty.call(s,n)&&(e[n]=s[n])}return e}).apply(this,arguments)}exports.mockRequest=function(t){var s=jest.fn();return e({app:{},baseUrl:"",body:{},cookies:{},fresh:!0,hostname:"",ip:"127.0.0.1",ips:[],method:"",originalUrl:"",params:{},path:"",protocol:"https",query:{},route:{},secure:!0,signedCookies:{},stale:!1,subdomains:[],xhr:!0,accepts:jest.fn(),acceptsCharsets:jest.fn(),acceptsEncodings:jest.fn(),acceptsLanguages:jest.fn(),get:s,header:s,is:jest.fn(),range:jest.fn()},t)},exports.mockResponse=function(t){var s=jest.fn().mockReturnThis(),n=jest.fn().mockReturnThis();return e({app:{},headersSent:!1,locals:{},append:jest.fn().mockReturnThis(),attachment:jest.fn().mockReturnThis(),clearCookie:jest.fn().mockReturnThis(),contentType:n,cookie:jest.fn().mockReturnThis(),download:jest.fn(),end:jest.fn(),format:jest.fn().mockReturnThis(),get:jest.fn(),header:s,json:jest.fn().mockReturnThis(),jsonp:jest.fn().mockReturnThis(),links:jest.fn().mockReturnThis(),location:jest.fn().mockReturnThis(),redirect:jest.fn(),render:jest.fn(),send:jest.fn().mockReturnThis(),sendFile:jest.fn(),sendStatus:jest.fn().mockReturnThis(),set:s,status:jest.fn().mockReturnThis(),type:n,vary:jest.fn().mockReturnThis()},t)};
//# sourceMappingURL=index.js.map
